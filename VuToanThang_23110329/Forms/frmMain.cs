using System;
using System.Drawing;
using System.Windows.Forms;
using Guna.UI2.WinForms;

namespace VuToanThang_23110329.Forms
{
    public partial class frmMain : Form
    {
        private string userRole;

        public frmMain()
        {
            InitializeComponent();
        }

        public frmMain(string vaiTro)
        {
            InitializeComponent();
            userRole = vaiTro;
        }

        protected override void OnFormClosing(FormClosingEventArgs e)
        {
            if (e.CloseReason == CloseReason.UserClosing)
            {
                if (MessageBox.Show("B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t ·ª©ng d·ª•ng?", "X√°c nh·∫≠n", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.No)
                {
                    e.Cancel = true;
                }
            }
            base.OnFormClosing(e);
        }


        private void frmMain_Load(object sender, EventArgs e)
        {
            SetupMenuForRole(userRole);
            lblUserInfo.Text = $"Ng∆∞·ªùi d√πng: {userRole}";
            lblStatus.Text = "S·∫µn s√†ng";
            lblWelcome.Text = $"Ch√†o m·ª´ng {userRole} ƒë·∫øn v·ªõi h·ªá th·ªëng qu·∫£n l√Ω nh√¢n s·ª±!";
        }

        // Sidebar Navigation Event Handlers
        private void btnDashboard_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnDashboard);
            lblWelcome.Text = "üìä T·ªïng quan h·ªá th·ªëng";
            lblStatus.Text = "ƒêang xem t·ªïng quan";
            // TODO: Load dashboard content
        }

        private void btnQuanLy_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnQuanLy);
            lblWelcome.Text = "üë• Qu·∫£n l√Ω nh√¢n s·ª±";
            lblStatus.Text = "ƒêang qu·∫£n l√Ω nh√¢n s·ª±";
            
            // Hi·ªÉn th·ªã menu con cho HR, QuanLy v√† KeToan
            if (userRole == "HR" || userRole == "QuanLy" || userRole == "KeToan")
            {
                ShowSubMenu("Qu·∫£n l√Ω nh√¢n s·ª±", new string[] 
                { 
                    "H·ªì s∆° Nh√¢n vi√™n", 
                    "Ph√≤ng ban & Ch·ª©c v·ª•",  // ‚úÖ Th√™m l·∫°i
                    "L·ªãch ph√¢n ca", 
                    "Duy·ªát ƒê∆°n t·ª´" 
                });
            }
            else
            {
                MessageBox.Show($"B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p ch·ª©c nƒÉng n√†y.", "Th√¥ng b√°o", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        // ‚úÖ ƒê√£ XO√Å: Tab Danh m·ª•c (tr√πng l·∫∑p v·ªõi tab Qu·∫£n l√Ω)
        private void btnDanhMuc_Click(object sender, EventArgs e)
        {
            // Chuy·ªÉn h∆∞·ªõng sang tab Qu·∫£n l√Ω
            btnQuanLy_Click(sender, e);
        }

        private void btnCaLam_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnCaLam);
            lblWelcome.Text = "‚è∞ Qu·∫£n l√Ω ca l√†m vi·ªác";
            lblStatus.Text = "ƒêang qu·∫£n l√Ω ca l√†m vi·ªác";
            
            OpenFormInPanel(new frmCaLam(userRole));
        }

        private void btnNghiepVu_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnNghiepVu);
            lblWelcome.Text = "‚öôÔ∏è Nghi·ªáp v·ª•";
            lblStatus.Text = "ƒêang x·ª≠ l√Ω nghi·ªáp v·ª•";
            
            // Hi·ªÉn th·ªã menu con theo vai tr√≤
            if (userRole == "QuanLy")
            {
                ShowSubMenu("Nghi·ªáp v·ª• Qu·∫£n l√Ω", new string[] 
                { 
                    "Duy·ªát ƒê∆°n t·ª´" 
                });
            }
            else if (userRole == "NhanVien")
            {
                ShowSubMenu("ƒê∆°n t·ª´", new string[] 
                { 
                    "T·∫°o ƒë∆°n t·ª´",
                    "Xem ƒë∆°n c·ªßa t√¥i"
                });
            }
        }

        private void btnTienLuong_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnTienLuong);
            lblWelcome.Text = "üí∞ Qu·∫£n l√Ω ti·ªÅn l∆∞∆°ng";
            lblStatus.Text = "ƒêang qu·∫£n l√Ω l∆∞∆°ng";
            
            // Hi·ªÉn th·ªã menu con cho K·∫ø to√°n
            if (userRole == "KeToan")
            {
                ShowSubMenu("Ti·ªÅn l∆∞∆°ng", new string[] 
                { 
                    "Qu·∫£n l√Ω B·∫£ng l∆∞∆°ng" 
                });
            }
        }

        private void btnCaNhan_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnCaNhan);
            lblWelcome.Text = "üë§ Th√¥ng tin c√° nh√¢n";
            lblStatus.Text = "ƒêang xem th√¥ng tin c√° nh√¢n";
            
            // M·ªü tr·ª±c ti·∫øp form th√¥ng tin c√° nh√¢n
            OpenFormInPanel(new frmThongTinCaNhan());
        }

        private void btnChamCong_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnChamCong);
            lblWelcome.Text = "‚è∞ Ch·∫•m c√¥ng";
            lblStatus.Text = "ƒêang ch·∫•m c√¥ng";
            
            // M·ªü form ch·∫•m c√¥ng tr·ª±c ti·∫øp
            OpenFormInPanel(new frmChamCong());
        }

        private void btnBaoCao_Click(object sender, EventArgs e)
        {
            SetActiveButton(btnBaoCao);
            lblWelcome.Text = "üìä B√°o c√°o th·ªëng k√™";
            lblStatus.Text = "ƒêang xem b√°o c√°o";
            
            // Hi·ªÉn th·ªã menu con theo vai tr√≤
            if (userRole == "HR")
            {
                ShowSubMenu("B√°o c√°o HR", new string[] 
                { 
                    "B√°o c√°o Nh√¢n s·ª±", 
                    "B·∫£ng c√¥ng chi ti·∫øt" 
                });
            }
            else if (userRole == "KeToan")
            {
                ShowSubMenu("B√°o c√°o K·∫ø to√°n", new string[] 
                { 
                    "Xem B·∫£ng c√¥ng th√°ng", 
                    "B√°o c√°o L∆∞∆°ng" 
                });
            }
        }

        private void btnDangXuat_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("B·∫°n c√≥ ch·∫Øc mu·ªën ƒëƒÉng xu·∫•t?", "X√°c nh·∫≠n", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                this.Close();
                new frmLogin().Show();
            }
        }

        private void SetupMenuForRole(string role)
        {
            // M·∫∑c ƒë·ªãnh ·∫©n t·∫•t c·∫£ buttons
            btnQuanLy.Visible = false;
            btnDanhMuc.Visible = false;  // ‚úÖ ·∫®n lu√¥n, kh√¥ng d√πng n·ªØa
            btnCaLam.Visible = false;
            btnNghiepVu.Visible = false;
            btnTienLuong.Visible = false;
            btnCaNhan.Visible = false;
            btnChamCong.Visible = false;
            switch (role)
            {
                case "QuanLy": // Gi√°m ƒë·ªëc - c√≥ quy·ªÅn cao nh·∫•t
                    btnQuanLy.Visible = true;      // Qu·∫£n l√Ω nh√¢n s·ª±
                    btnCaLam.Visible = true;       // Ca l√†m vi·ªác
                    btnBaoCao.Visible = true;      // B√°o c√°o
                    btnChamCong.Visible = true;    // Ch·∫•m c√¥ng
                    btnCaNhan.Visible = true;      // C√° nh√¢n
                    break;

                case "HR": // Nh√¢n vi√™n HR
                    btnQuanLy.Visible = true;      // Qu·∫£n l√Ω nh√¢n s·ª±
                    btnNghiepVu.Visible = true;    // Nghi·ªáp v·ª• (Duy·ªát ƒë∆°n t·ª´)
                    btnCaLam.Visible = true;       // Ca l√†m vi·ªác
                    btnBaoCao.Visible = true;      // B√°o c√°o
                    btnChamCong.Visible = true;    // Ch·∫•m c√¥ng
                    btnCaNhan.Visible = true;      // C√° nh√¢n
                    break;

                case "KeToan": // K·∫ø to√°n
                    btnQuanLy.Visible = true;      // Qu·∫£n l√Ω nh√¢n s·ª± (ƒë·ªÉ xem nh√¢n vi√™n)
                    btnTienLuong.Visible = true;   // Ti·ªÅn l∆∞∆°ng
                    btnBaoCao.Visible = true;      // B√°o c√°o
                    btnChamCong.Visible = true;    // Ch·∫•m c√¥ng
                    btnCaNhan.Visible = true;      // C√° nh√¢n
                    break;

                case "NhanVien": // Nh√¢n vi√™n th∆∞·ªùng
                    btnChamCong.Visible = true;    // Ch·∫•m c√¥ng
                    btnNghiepVu.Visible = true;    // ƒê∆°n t·ª´
                    btnCaNhan.Visible = true;      // C√° nh√¢n
                    break;

                default: // M·∫∑c ƒë·ªãnh cho nh√¢n vi√™n
                    btnCaNhan.Visible = true;
                    break;
            }
    }            

        private void SetActiveButton(Guna.UI2.WinForms.Guna2Button activeButton)
        {
            // Reset all buttons to default state
            Guna.UI2.WinForms.Guna2Button[] buttons = { btnDashboard, btnQuanLy, btnCaLam, btnNghiepVu, btnTienLuong, btnCaNhan, btnChamCong, btnBaoCao }; // ‚úÖ ƒê√£ xo√° btnDanhMuc
            
            foreach (var btn in buttons)
            {
                btn.FillColor = System.Drawing.Color.White;
                btn.ForeColor = System.Drawing.Color.Black; // Black text
            }

            // Set active button
            activeButton.FillColor = System.Drawing.Color.FromArgb(((int)(((byte)(220)))), ((int)(((byte)(53)))), ((int)(((byte)(69))))); // Red background
            activeButton.ForeColor = System.Drawing.Color.White; // White text
        }

        private void ShowSubMenu(string title, string[] menuItems)
        {
            // Dispose controls c≈© tr∆∞·ªõc khi x√≥a
            foreach (Control control in pnlContent.Controls)
            {
                if (control is IDisposable disposable)
                {
                    disposable.Dispose();
                }
            }
            pnlContent.Controls.Clear();
            
            // T·∫°o label ti√™u ƒë·ªÅ
            Label lblTitle = new Label();
            lblTitle.Name = "lblSubMenuTitle";
            lblTitle.Text = title;
            lblTitle.Font = new Font("Segoe UI", 16, FontStyle.Bold);
            lblTitle.ForeColor = Color.FromArgb(64, 64, 64);
            lblTitle.Location = new Point(50, 50);
            lblTitle.AutoSize = true;
            pnlContent.Controls.Add(lblTitle);
            
            // T·∫°o c√°c button menu con
            int yPos = 100;
            for (int i = 0; i < menuItems.Length; i++)
            {
                string item = menuItems[i];
                Guna.UI2.WinForms.Guna2Button btn = new Guna.UI2.WinForms.Guna2Button();
                btn.Name = $"btnSubMenu_{i}";
                btn.Text = item;
                btn.Font = new Font("Segoe UI", 12, FontStyle.Regular);
                btn.ForeColor = Color.FromArgb(64, 64, 64);
                btn.FillColor = Color.FromArgb(248, 249, 250);
                btn.BorderRadius = 8;
                btn.Size = new Size(300, 45);
                btn.Location = new Point(50, yPos);
                btn.TextAlign = HorizontalAlignment.Left;
                btn.Tag = item; // L∆∞u t√™n ch·ª©c nƒÉng v√†o Tag
                btn.Click += BtnSubMenu_Click;
                pnlContent.Controls.Add(btn);
                yPos += 60;
            }
        }

        private void BtnSubMenu_Click(object sender, EventArgs e)
        {
            if (sender is Guna.UI2.WinForms.Guna2Button btn && btn.Tag is string functionName)
            {
                switch (functionName)
                {
                    case "H·ªì s∆° Nh√¢n vi√™n":
                        OpenFormInPanel(new frmNhanVien(userRole));
                        lblStatus.Text = "ƒêang qu·∫£n l√Ω h·ªì s∆° nh√¢n vi√™n";
                        break;
                    case "Ph√≤ng ban & Ch·ª©c v·ª•":
                        OpenFormInPanel(new frmPhongBan_ChucVu());
                        lblStatus.Text = "ƒêang qu·∫£n l√Ω ph√≤ng ban & ch·ª©c v·ª•";
                        break;
                    case "L·ªãch ph√¢n ca":
                        OpenFormInPanel(new frmPhanCa());
                        lblStatus.Text = "ƒêang qu·∫£n l√Ω l·ªãch ph√¢n ca";
                        break;
                    case "Xem L·ªãch ph√¢n ca":
                        OpenFormInPanel(new frmPhanCa());
                        lblStatus.Text = "ƒêang xem l·ªãch ph√¢n ca";
                        break;
                   case "Ca l√†m vi·ªác":
                       OpenFormInPanel(new frmCaLam(userRole));
                       lblStatus.Text = "ƒêang qu·∫£n l√Ω ca l√†m vi·ªác";
                       break;
                   case "Duy·ªát ƒë∆°n t·ª´":
                   case "Duy·ªát ƒê∆°n t·ª´":
                       OpenFormInPanel(new frmDuyetDonTu());
                       lblStatus.Text = "ƒêang duy·ªát ƒë∆°n t·ª´";
                       break;
                   case "T·∫°o ƒë∆°n t·ª´":
                   case "G·ª≠i ƒê∆°n t·ª´":
                       OpenFormInPanel(new frmTaoDonTu());
                       lblStatus.Text = "ƒêang t·∫°o ƒë∆°n t·ª´";
                       break;
                   case "Xem ƒë∆°n c·ªßa t√¥i":
                       OpenFormInPanel(new frmXemDonCuaToi());
                       lblStatus.Text = "ƒêang xem ƒë∆°n t·ª´ c·ªßa t√¥i";
                       break;
                   case "Th√¥ng tin c√° nh√¢n":
                   case "Th√¥ng tin c·ªßa t√¥i":
                       OpenFormInPanel(new frmThongTinCaNhan());
                       lblStatus.Text = "ƒêang xem th√¥ng tin c√° nh√¢n";
                       break;
                   case "Ch·∫•m c√¥ng":
                   case "Check-in / Check-out":
                       OpenFormInPanel(new frmChamCong());
                       lblStatus.Text = "ƒêang ch·∫•m c√¥ng";
                       break;
                   case "B·∫£ng l∆∞∆°ng":
                   case "Qu·∫£n l√Ω B·∫£ng l∆∞∆°ng":
                       OpenFormInPanel(new frmBangLuong());
                       lblStatus.Text = "ƒêang qu·∫£n l√Ω b·∫£ng l∆∞∆°ng";
                       break;
                   case "B√°o c√°o Nh√¢n s·ª±":
                   case "B·∫£ng c√¥ng chi ti·∫øt":
                   case "Xem B·∫£ng c√¥ng th√°ng":
                   case "B√°o c√°o L∆∞∆°ng":
                       // T·∫°m th·ªùi hi·ªÉn th·ªã form b√°o c√°o ƒë∆°n gi·∫£n
                       var frmBaoCao = new Form
                       {
                           Text = functionName,
                           FormBorderStyle = FormBorderStyle.None,
                           Dock = DockStyle.Fill,
                           BackColor = Color.White
                       };
                       var lblBaoCao = new Label
                       {
                           Text = $"üìä {functionName}\\n\\nCh·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.\\nVui l√≤ng quay l·∫°i sau.",
                           Font = new Font("Segoe UI", 16, FontStyle.Bold),
                           ForeColor = Color.FromArgb(94, 148, 255),
                           TextAlign = ContentAlignment.MiddleCenter,
                           Dock = DockStyle.Fill
                       };
                       frmBaoCao.Controls.Add(lblBaoCao);
                       OpenFormInPanel(frmBaoCao);
                       lblStatus.Text = $"ƒêang xem {functionName}";
                       break;
                   case "ƒê·ªïi m·∫≠t kh·∫©u":
                       MessageBox.Show("Ch·ª©c nƒÉng ƒë·ªïi m·∫≠t kh·∫©u ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn.", "Th√¥ng b√°o", MessageBoxButtons.OK, MessageBoxIcon.Information);
                       break;
                   case "ƒêƒÉng xu·∫•t":
                       btnDangXuat_Click(sender, e);
                       break;
                   case "Tho√°t":
                       this.Close();
                       break;
                   default:
                       MessageBox.Show($"Ch·ª©c nƒÉng '{functionName}' ch∆∞a ƒë∆∞·ª£c tri·ªÉn khai.", "Th√¥ng b√°o", MessageBoxButtons.OK, MessageBoxIcon.Information);
                       break;
                }
            }
        }

        private void OpenFormInPanel(Form childForm)
        {
            // Dispose controls c≈© tr∆∞·ªõc khi x√≥a
            foreach (Control control in pnlContent.Controls)
            {
                if (control is IDisposable disposable)
                {
                    disposable.Dispose();
                }
            }
            pnlContent.Controls.Clear();
            
            childForm.TopLevel = false;
            childForm.FormBorderStyle = FormBorderStyle.None;
            childForm.Dock = DockStyle.Fill;
            pnlContent.Controls.Add(childForm);
            childForm.Show();
        }
    }
}
